version: '3'

services:
  product-service-api:
    container_name: product-service-api
    build:
      context: ./product.service
      dockerfile: ./docker/Dockerfile
    ports:
      - "8080:8091"
    env_file:
      - ./product.service/.env
    networks:
      - product-service-api-network
    depends_on:
      - product-service-api-mongodb

  product-service-api-mongodb:
    container_name: product-service-api-mongodb
    image: mongo:6
    environment:
      - MONGO_INITDB_DATABASE=productdb
      - MONGO_INITDB_ROOT_USERNAME=randomUser
      - MONGO_INITDB_ROOT_PASSWORD=randomPassword
    expose:
      - "27017"
    ports:
      - "27017:27017"
    volumes:
      - product_service_api_mongo:/data/db
    networks:
      - product-service-api-network

  user-service-postgres:
    container_name: user-service-postgres
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: goStack
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - user_service_api_postgres:/data/postgres
    networks:
      - product-service-api-network

networks:
  product-service-api-network:
    driver: bridge

volumes:
  product_service_api_mongo:
    driver: local
  user_service_api_postgres:
    driver: local
